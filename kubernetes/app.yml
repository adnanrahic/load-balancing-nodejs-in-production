apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -f kompose.yml -o app.yml
      kompose.service.type: LoadBalancer
      kompose.version: 1.1.0 (36652f6)
    creationTimestamp: null
    labels:
      io.kompose.service: nginx
    name: nginx
  spec:
    ports:
    - name: "80"
      port: 80
      targetPort: 80
    selector:
      io.kompose.service: nginx
    type: LoadBalancer
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -f kompose.yml -o app.yml
      kompose.service.type: LoadBalancer
      kompose.version: 1.1.0 (36652f6)
    creationTimestamp: null
    labels:
      io.kompose.service: nodejs
    name: nodejs
  spec:
    clusterIP: None
    ports:
    - name: headless
      port: 55555
      targetPort: 0
    selector:
      io.kompose.service: nodejs
  status:
    loadBalancer: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -f kompose.yml -o app.yml
      kompose.service.type: LoadBalancer
      kompose.version: 1.1.0 (36652f6)
    creationTimestamp: null
    labels:
      io.kompose.service: nginx
    name: nginx
  spec:
    replicas: 1
    strategy: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: nginx
      spec:
        containers:
        - env:
          - name: GET_HOSTS_FROM
            value: dns
          image: adnanrahic/docker_nginx
          name: nginx
          ports:
          - containerPort: 80
          resources: {}
        restartPolicy: Always
  status: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -f kompose.yml -o app.yml
      kompose.service.type: LoadBalancer
      kompose.version: 1.1.0 (36652f6)
    creationTimestamp: null
    labels:
      io.kompose.service: nodejs
    name: nodejs
  spec:
    replicas: 4
    strategy: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: nodejs
      spec:
        containers:
        - env:
          - name: GET_HOSTS_FROM
            value: dns
          image: adnanrahic/docker_nodejs
          name: nodejs
          resources: {}
        restartPolicy: Always
  status: {}
kind: List
metadata: {}

